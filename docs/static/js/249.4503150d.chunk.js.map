{"version":3,"file":"static/js/249.4503150d.chunk.js","mappings":"8OAgBA,SAASA,EAAeC,GACtB,OAAO,OAAIA,GAAWC,MAAK,SAACC,EAAGC,GAC7B,OAAID,EAAEE,WAAWC,OAASC,EAAAA,GAChB,EACCH,EAAEC,WAAWC,OAASC,EAAAA,EACxB,EAEAJ,EAAEK,UAAYJ,EAAEI,aAKd,SAASC,EAAT,GAAkD,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,SAC3C,GAA4CC,EAAAA,EAAAA,UAASb,EAAeU,IAApE,eAAOI,EAAP,KAAuBC,EAAvB,KACQC,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GAAtBF,OAKFG,EAJ4C,CAChD,QAAS,UACT,QAAS,WAEkBH,IAE7BI,EAAAA,EAAAA,YAAU,WACRL,EAAkBf,EAAeU,MAChC,CAACA,IAOJ,IAAMW,EAAYV,EAAM,SAAW,UAQnC,IAbkBW,EAaZC,EAAUT,EAAe,GACzBU,EAAWV,EAAeA,EAAeW,OAAS,GAExD,OACE,iBAAKC,UAAU,6CAAf,UACGZ,EAAeW,OAAS,IACvB,cAAGC,UAAU,OAAb,UACE,uBAAIL,OAGR,eAAIK,UAAU,wCAAd,SACGZ,EAAea,KAAI,SAACC,EAAOC,GAC1B,MAAyCD,EAAMvB,WAAvCyB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAAQzB,EAA1B,EAA0BA,KACpB0B,GADN,EAAgCC,MACV,IAAIC,oBACtBC,EAAOL,GAAY,GAAKC,EAASzB,EAKrC,MAJe,UAAXU,IACFmB,EAAOP,EAAMvB,WAAWc,KAIxB,yBACE,oBACEiB,QAAS,SAACC,GAAD,OA5BvB,SAAuBA,EAAmBR,GACxC,IAAMS,EAAiBxB,EAAee,GAChCU,GAASC,EAAAA,EAAAA,GAAWF,IAC1BG,EAAAA,EAAAA,GAAUF,EAAQ3B,GAyBU8B,CAAcL,EAAGR,IACjCH,UAAU,mCAFZ,WAIE,gBACEiB,IAAG,kCAA6BX,EAAKY,cAAlC,QACHC,IAAKV,EACLT,UAAU,MAEZ,iBAAMA,UAAU,eAAhB,SAAgCS,QAV3BN,QAgBdN,GAAWC,IACV,gBAAKE,UAAU,OAAf,UACE,0BACE,SAAC,IAAD,CAAkBoB,GAAG,UADvB,MAnDUxB,EAoDkC,OAACC,QAAD,IAACA,OAAD,EAACA,EAASf,WAnDjDc,EAAI,KACLyB,QAAQ,GAAGC,QAAQ,wBAAyB,MAiDhD,gB,kEC1FH,SAASR,EAAWS,GACzB,IAAQC,EAASD,EAATC,KACR,UAAiCA,EAAjC,GAAOC,EAAP,KAAaC,EAAb,KAAmBC,EAAnB,KAGA,MAAO,CAACC,KAFQF,EADhB,MAC+B,EAERG,KADJJ,EAAOE,GAAQ","sources":["components/List.tsx","util/centre.ts"],"sourcesContent":["import { SyntheticEvent, useContext, useEffect, useState } from \"react\";\r\nimport { GlobeMethods } from \"react-globe.gl\";\r\nimport { Country, LanguageName } from \"../lib/country\";\r\nimport { answerName } from \"../util/answer\";\r\nimport { findCentre } from \"../util/centre\";\r\nimport { turnGlobe } from \"../util/globe\";\r\nimport { LocaleContext } from \"../i18n/LocaleContext\";\r\nimport { Locale } from \"../lib/locale\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\ntype Props = {\r\n  guesses: Country[];\r\n  win: boolean;\r\n  globeRef: React.MutableRefObject<GlobeMethods>;\r\n};\r\n\r\nfunction reorderGuesses(guessList: Country[]) {\r\n  return [...guessList].sort((a, b) => {\r\n    if (a.properties.NAME === answerName) {\r\n      return -1;\r\n    } else if (b.properties.NAME === answerName) {\r\n      return 1;\r\n    } else {\r\n      return a.proximity - b.proximity;\r\n    }\r\n  });\r\n}\r\n\r\nexport default function List({ guesses, win, globeRef }: Props) {\r\n  const [orderedGuesses, setOrderedGuesses] = useState(reorderGuesses(guesses));\r\n  const { locale } = useContext(LocaleContext);\r\n  const langNameMap: Record<Locale, LanguageName> = {\r\n    \"es-MX\": \"NAME_ES\",\r\n    \"en-CA\": \"NAME_EN\",\r\n  };\r\n  const langName = langNameMap[locale];\r\n\r\n  useEffect(() => {\r\n    setOrderedGuesses(reorderGuesses(guesses));\r\n  }, [guesses]);\r\n\r\n  function formatKm(m: number) {\r\n    const km = m / 1000;\r\n    return km.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  const qualifier = win ? \"Answer\" : \"Closest\";\r\n\r\n  function turnToCountry(e: SyntheticEvent, idx: number) {\r\n    const clickedCountry = orderedGuesses[idx];\r\n    const coords = findCentre(clickedCountry);\r\n    turnGlobe(coords, globeRef);\r\n  }\r\n\r\n  const closest = orderedGuesses[0];\r\n  const farthest = orderedGuesses[orderedGuesses.length - 1];\r\n\r\n  return (\r\n    <div className=\"md:ml-10 md:mr-0 py-8 dark:text-white z-30\">\r\n      {orderedGuesses.length > 0 && (\r\n        <p className=\"my-1\">\r\n          <b>{qualifier}</b>\r\n        </p>\r\n      )}\r\n      <ul className=\"grid grid-cols-3 md:grid-cols-4 gap-3\">\r\n        {orderedGuesses.map((guess, idx) => {\r\n          const { NAME_LEN, ABBREV, NAME, FLAG } = guess.properties;\r\n          const flag = (FLAG || \"\").toLocaleLowerCase();\r\n          let name = NAME_LEN >= 10 ? ABBREV : NAME;\r\n          if (locale !== \"en-CA\") {\r\n            name = guess.properties[langName];\r\n          }\r\n\r\n          return (\r\n            <li key={idx}>\r\n              <button\r\n                onClick={(e) => turnToCountry(e, idx)}\r\n                className=\"flex items-center cursor-pointer\"\r\n              >\r\n                <img\r\n                  src={`https://flagcdn.com/w20/${flag.toLowerCase()}.png`}\r\n                  alt={name}\r\n                  className=\"\"\r\n                />\r\n                <span className=\"ml-2 text-md\">{name}</span>\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      {closest && farthest && (\r\n        <div className=\"mt-8\">\r\n          <p>\r\n            <FormattedMessage id=\"Game8\" />: {formatKm(closest?.proximity)} km\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Country } from '../lib/country';\r\n\r\nexport function findCentre(country: Country) {\r\n  const { bbox } = country;\r\n  const [lng1, lat1, lng2, lat2] = bbox;\r\n  let latitude = (lat1 + lat2) / 2;\r\n  const longitude = (lng1 + lng2) / 2;\r\n  return {lat: latitude, lng: longitude};\r\n}\r\n\r\n\r\n"],"names":["reorderGuesses","guessList","sort","a","b","properties","NAME","answerName","proximity","List","guesses","win","globeRef","useState","orderedGuesses","setOrderedGuesses","locale","useContext","LocaleContext","langName","useEffect","qualifier","m","closest","farthest","length","className","map","guess","idx","NAME_LEN","ABBREV","flag","FLAG","toLocaleLowerCase","name","onClick","e","clickedCountry","coords","findCentre","turnGlobe","turnToCountry","src","toLowerCase","alt","id","toFixed","replace","country","bbox","lng1","lat1","lng2","lat","lng"],"sourceRoot":""}